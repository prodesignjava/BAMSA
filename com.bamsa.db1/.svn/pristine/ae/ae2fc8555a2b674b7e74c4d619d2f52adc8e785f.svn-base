package com.bamsa.db.dao.impl;

import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import javax.sql.DataSource;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;
import org.springframework.stereotype.Repository;

import com.bamsa.db.beans.ContactBean;
import com.bamsa.db.dao.ContactDAO;
@Repository
public class ContactDAOImpl implements ContactDAO{
	@Autowired
	private Properties dbProps;
	@Autowired
	private JdbcTemplate jdbcTemplate;
	private static Logger logger = Logger.getLogger(ContactDAOImpl.class);
	@Override
	public ContactBean saveContactdetails(ContactBean contactdetails) {
		logger.info("enter into saveContactdetails");
		DataSource dataSource = jdbcTemplate.getDataSource();
		try{
		if(null != contactdetails){
			SimpleJdbcInsert jdbcInsert = new SimpleJdbcInsert(dataSource);
			
			Map<String,Object> recordParameters = new HashMap<String,Object>();
			recordParameters.put("accountname", contactdetails.getAccountName());
			recordParameters.put("accountowner", contactdetails.getAccountOwner());
			recordParameters.put("category", contactdetails.getCategory());
			recordParameters.put("website", contactdetails.getWebsite());
			recordParameters.put("status", contactdetails.getStatus());
			recordParameters.put("addressinfo", contactdetails.getAddresInfo());
			recordParameters.put("phoneno", contactdetails.getPhoneno());
			recordParameters.put("state", contactdetails.getState());
			recordParameters.put("city", contactdetails.getCity());
			recordParameters.put("primaryemail", contactdetails.getPrimaryemail());
			recordParameters.put("firstname", contactdetails.getFirstname());
			recordParameters.put("lastname", contactdetails.getLastname());
			recordParameters.put("secondaryemail", contactdetails.getSecondaryemail());
			recordParameters.put("reclist", contactdetails.getReqlist());
			recordParameters.put("hotlist", contactdetails.getHotlist());
			
			logger.info(recordParameters);
            jdbcInsert.withTableName("accountinfo")
			.usingGeneratedKeyColumns("acid");	
			contactdetails.setAcid(jdbcInsert.executeAndReturnKey(recordParameters).intValue());
		}
		}catch(Exception e){
			logger.error(e.getMessage());
		}
		logger.info("exit from saveContactdetails");
		return contactdetails;		
	}

		}
